exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

target-version = "py312"

[lint]
select = [
  "E",  # pycodestyle(error) - 예: 잘못된 들여쓰기, 공백 문제 등
  "W",  # pycodestyle(warnings) - 예: 불필요한 줄 바꿈, 불필요한 공백
  "F",  # pyflakes - 예: 사용되지 않는 import, 정의되지 않은 이름 참조
  "I",  # isort - 예: import 문을 정렬하고 일관되게 유지
  "PL", # pylint - 예: 불필요한 변수 재정의, 중복된 코드 블록 탐지, 메서드와 클래스의 이름 규칙 위반
  "Q",  # Flake8-Quotes - 따옴표 스타일을 검사
  "UP", # 최신 버전의 파이썬 언어로 코드를 유지
  "N"   # PEP 8 Naming Conventions - PEP 8에 따른 명명 규칙 준수 여부를 검사, 예: 클래스는 대문자 카멜케이스, 변수와 함수는 소문자 스네이크케이스.
]
fixable = ["B", "F", "I", "UP"] # 자동으로 수정할 수 있는 코드 규칙을 지정
unfixable = []

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
exclude = ["*.pyi"]